"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _reactMotion = require("react-motion");

var _glamor = require("glamor");

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var defaultDimension = "auto";

var TextLoop = function (_React$PureComponent) {
    _inherits(TextLoop, _React$PureComponent);

    function TextLoop(props) {
        _classCallCheck(this, TextLoop);

        var _this = _possibleConstructorReturn(this, (TextLoop.__proto__ || Object.getPrototypeOf(TextLoop)).call(this, props));

        _initialiseProps.call(_this);

        _this.state = {
            currentWord: 0,
            wordCount: 0,
            hasLoaded: false
        };
        return _this;
    }

    _createClass(TextLoop, [{
        key: "componentDidMount",
        value: function componentDidMount() {
            // Starts animation
            var speed = this.props.speed;

            if (speed > 0) {
                this.tick();
                this.tickInterval = setInterval(this.tick, this.props.speed);
            }
        }
    }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps) {
            var speed = this.props.speed;

            if (prevProps.speed !== speed) {
                clearInterval(this.tickInterval);
                if (speed > 0) {
                    this.tickInterval = setInterval(this.tick, speed);
                }
            }
        }
    }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
            if (this.tickInterval != null) {
                clearInterval(this.tickInterval);
            }
        }

        // Fade out animation


        // Fade in animation

    }, {
        key: "getOpacity",
        value: function getOpacity() {
            return this.props.fade ? 0 : 1;
        }
    }, {
        key: "getDimensions",
        value: function getDimensions() {
            if (this.wordBox == null) {
                return {
                    width: defaultDimension,
                    height: defaultDimension
                };
            }

            return this.wordBox.getBoundingClientRect();
        }
    }, {
        key: "getStyles",
        value: function getStyles() {
            var _getDimensions = this.getDimensions(),
                height = _getDimensions.height;

            return (0, _glamor.css)(this.props.style, this.props.mask && { overflow: "hidden" }, {
                display: "inline-block",
                position: "relative",
                verticalAlign: "top",
                height: height
            });
        }
    }, {
        key: "getTextStyles",
        value: function getTextStyles(isStatic) {
            var position = isStatic ? "relative" : "absolute";
            return (0, _glamor.css)({
                whiteSpace: "nowrap",
                display: "inline-block",
                left: 0,
                top: 0,
                position: position
            });
        }
    }, {
        key: "getTransitionMotionStyles",
        value: function getTransitionMotionStyles() {
            var _props = this.props,
                children = _props.children,
                springConfig = _props.springConfig;
            var _state = this.state,
                wordCount = _state.wordCount,
                currentWord = _state.currentWord;

            var options = _react2.default.Children.toArray(children);

            return [{
                key: "step-" + wordCount,
                data: {
                    text: options[currentWord]
                },
                style: {
                    opacity: (0, _reactMotion.spring)(1, springConfig),
                    translate: (0, _reactMotion.spring)(0, springConfig)
                }
            }];
        }
    }, {
        key: "renderStatic",
        value: function renderStatic() {
            var _this2 = this;

            var children = _react2.default.Children.toArray(this.props.children)[0];
            return _react2.default.createElement(
                "span",
                {
                    ref: function ref(n) {
                        _this2.wordBox = n;
                    }
                },
                children
            );
        }
    }, {
        key: "renderAnimation",
        value: function renderAnimation() {
            var _this3 = this;

            return _react2.default.createElement(
                _reactMotion.TransitionMotion,
                {
                    willLeave: this.willLeave,
                    willEnter: this.willEnter,
                    styles: this.getTransitionMotionStyles()
                },
                function (interpolatedStyles) {
                    var _getDimensions2 = _this3.getDimensions(),
                        height = _getDimensions2.height,
                        width = _getDimensions2.width;

                    return _react2.default.createElement(
                        "div",
                        {
                            style: {
                                transition: "width " + _this3.props.adjustingSpeed + "ms linear",
                                height: height,
                                width: width
                            }
                        },
                        interpolatedStyles.map(function (config) {
                            return _react2.default.createElement(
                                "div",
                                _extends({}, _this3.getTextStyles(width === defaultDimension), {
                                    ref: function ref(n) {
                                        _this3.wordBox = n;
                                    },
                                    key: config.key,
                                    style: {
                                        opacity: config.style.opacity,
                                        transform: "translateY(" + config.style.translate + "px)"
                                    }
                                }),
                                config.data.text
                            );
                        })
                    );
                }
            );
        }
    }, {
        key: "render",
        value: function render() {
            return _react2.default.createElement(
                "div",
                this.getStyles(),
                !this.state.hasLoaded ? this.renderStatic() : this.renderAnimation()
            );
        }
    }]);

    return TextLoop;
}(_react2.default.PureComponent);

var _initialiseProps = function _initialiseProps() {
    var _this4 = this;

    this.willLeave = function () {
        var _getDimensions3 = _this4.getDimensions(),
            height = _getDimensions3.height;

        return {
            opacity: (0, _reactMotion.spring)(_this4.getOpacity(), _this4.props.springConfig),
            translate: (0, _reactMotion.spring)(-height, _this4.props.springConfig)
        };
    };

    this.willEnter = function () {
        var _getDimensions4 = _this4.getDimensions(),
            height = _getDimensions4.height;

        return {
            opacity: _this4.getOpacity(),
            translate: height
        };
    };

    this.tick = function () {
        _this4.setState(function (state, props) {
            if (!state.hasLoaded) {
                return {
                    hasLoaded: true
                };
            }

            return {
                currentWord: (state.currentWord + 1) % _react2.default.Children.count(props.children),
                wordCount: (state.wordCount + 1) % 1000 };
        });
    };
};

TextLoop.propTypes = {
    speed: _propTypes2.default.number.isRequired,
    adjustingSpeed: _propTypes2.default.number.isRequired,
    style: _propTypes2.default.object,
    springConfig: _propTypes2.default.object.isRequired,
    children: _propTypes2.default.node.isRequired,
    fade: _propTypes2.default.bool.isRequired,
    mask: _propTypes2.default.bool.isRequired
};

TextLoop.defaultProps = {
    speed: 3000,
    adjustingSpeed: 150,
    springConfig: { stiffness: 340, damping: 30 },
    fade: true,
    mask: false
};

exports.default = TextLoop;